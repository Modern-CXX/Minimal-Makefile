$ cd myproject
$ ls
Makefile  bar  main
$
$ find . | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
.
|____Makefile
|____bar
| |____Makefile
| |____bar.c
| |____bar.h
|____main
| |____Makefile
| |____main.c
$
$
$ cat Makefile
SUBDIRS = bar main
subdirs : $(SUBDIRS)
$(SUBDIRS) :
  make -C $@
clean :
  for dir in $(SUBDIRS); do \
    make -C $$dir $@; \
  done
.PHONY : $(SUBDIRS) subdirs clean

main : bar
bar :
  make -C $@
  cp bar/bar bar/libbar.so # Linux
  # cp bar/bar bar/libbar.dylib # macOS
$
$
$ cat bar/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g -fPIC # -O3 # CXXFLAGS for .cpp
LDFLAGS  = -shared # -L../bar
LDLIBS   = # -lbar
CPPFLAGS = -MMD -MP # -I../bar
#CC      = $(CXX) # link with CXX for .cpp

# specify install_name for .dylib itself on macOS
#LDFLAGS += -install_name @rpath/bar

# target name is basename of one of the source files
bar : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include *.d
clean : ; -rm -fr *.o *.d
.PHONY : clean
$
$
$ cat bar/bar.c
#include <stdio.h>
#include "bar.h"

void bar()
{
  printf("bar\n");
}
$
$
$ cat bar/bar.h
#ifndef _bar_
#define _bar_

void bar();

#endif
$
$
$ cat main/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g # -O3 -fPIC # CXXFLAGS for .cpp
LDFLAGS  = -L../bar # -shared
LDLIBS   = -lbar
CPPFLAGS = -MMD -MP -I../bar
#CC      = $(CXX) # link with CXX for .cpp

# linking to .so or .dylib
#LDFLAGS += -Wl,-rpath,'$$ORIGIN/../foo'

# target name is basename of one of the source files
main : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include *.d
clean : ; -rm -fr *.o *.d
.PHONY : clean
$
$
$ cat main/main.c
#include <stdio.h>
#include "bar.h"

int main()
{
  printf("main\n");

  bar();
}
$
