# Makefile
# 1. Generating Prerequisites Automatically for header files
# 2. Automatically compile source files in current directory and subdirs
# 3. Out of source tree build
#
# .
# ├── f1.c
# ├── f1.h
# ├── f2
# │   ├── f22
# │   │   ├── f22.c
# │   │   └── f22.h
# │   ├── f2.c
# │   └── f2.h
# ├── main.c
# ├── Makefile
# └── print_log.h
#

# C   code :  .c    %.c    *.c    CC   CFLAGS
# C++ code :  .cpp  %.cpp  *.cpp  CXX  CXXFLAGS

DIR      = ./.build
SRC      = $(shell find . -type f -name "*.c")  # .cpp
OBJ      = $(addprefix $(DIR)/,$(SRC:.c=.o))  # .cpp

# build shared library with -fPIC, -shared
CFLAGS   = -g # -O3 # -fPIC # CXXFLAGS
LDFLAGS  = -L../hello # -shared
LDLIBS   = -lpthread # -lhello
CPPFLAGS = -MMD -MP # -DNDEBUG # -I../hello

main : $(OBJ)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@  # CXX

$(DIR)/%.o : %.c  # .cpp
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<  # CXX CXXFLAGS

-include $(shell find . -type f -name "*.d")
clean : ; -rm -fr $(DIR)
.PHONY : clean
