# Makefile
# 1. Generating Prerequisites Automatically for header files
# 2. Automatically compile source files in current directory and subdirs
# 3. Put Makefile at root of source file directory
# 4. Out of source tree build
#
# .
# ├── main.c
# ├── f1.c
# ├── f1.h
# ├── f2
# │   ├── f2.c
# │   └── f2.h
# └── Makefile
#

OUT      = a.out
DIR      = ./.build
SRC      = $(shell find . -type f -name "*.c")
OBJ      = $(addprefix $(DIR)/,$(SRC:.c=.o))
DEP      = $(OBJ:.o=.d)

CFLAGS   = -std=c11 -Wall -W -pedantic -g # -O3
CPPFLAGS = -MMD -MP -DNDEBUG -I../hello
LDFLAGS  = # -L../hello
LDLIBS   = # -lpthread -lhello

# build shared library
#OUT       = ../lib/libhello.so
#CFLAGS   += -fPIC
#LDFLAGS  += -shared

.PHONY : all clean

all : $(OUT)

$(OUT) : $(OBJ)
	$(CC) $(LDFLAGS) $(LDLIBS) $^ -o $@

$(DIR)/%.o : %.c
	mkdir -p $(dir $@)
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@

-include $(DEP)

clean :
	rm -fr $(OUT) $(DIR)

